{"ast":null,"code":"var _jsxFileName = \"/home/amphioffice-17/Nishanthan/Amphisoft/hr-portal/src/pages/Projects/Projects.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Grid, Item, Label } from 'semantic-ui-react';\nimport SideBar from '../../components/SideBar/SideBar';\nimport EmployeeModal from '../../components/EmployeeModal/EmployeeModal';\nimport projectData from '../../assets/data/projectDetails.json';\nimport empData from '../../assets/data/employeesData.json';\nimport EmployeeCard from '../../components/EmployeeCard/EmployeeCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Projects = () => {\n  _s();\n  const [open, setOpen] = useState(false);\n  const [selectedEmp, setSelectedEmp] = useState(null);\n  const [clickedProjectId, setClickedProjectId] = useState(null);\n  const fetchDevelopers = teamMembers => {\n    const arr = empData.employees.filter(emp => teamMembers.includes(emp.empID));\n    console.log(\"arr:\", arr);\n    return arr;\n  };\n  const clickHandler = emp => {\n    setOpen(!open);\n    setSelectedEmp(emp);\n  };\n  const toggleDevelopers = projectId => {\n    setClickedProjectId(projectId === clickedProjectId ? null : projectId);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      style: {\n        width: \"100vw\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Grid.Column, {\n        style: {\n          width: \"12%\"\n        },\n        children: /*#__PURE__*/_jsxDEV(SideBar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid.Column, {\n        style: {\n          width: \"88%\",\n          padding: \"20px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Item.Group, {\n          divided: true,\n          children: projectData.map((project, index) => /*#__PURE__*/_jsxDEV(Item, {\n            children: [/*#__PURE__*/_jsxDEV(Item.Image, {\n              size: \"small\",\n              src: project.src\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Item.Content, {\n              style: {\n                padding: \"20px\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(Item.Header, {\n                children: project.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 41,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Item.Meta, {\n                children: project.projectTeam\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Item.Description, {\n                children: project.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Item.Extra, {\n                children: [project.techStack, /*#__PURE__*/_jsxDEV(\"span\", {\n                  onClick: () => toggleDevelopers(project.projectId),\n                  children: \"See Developers\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 46,\n                  columnNumber: 21\n                }, this), clickedProjectId === project.projectId && /*#__PURE__*/_jsxDEV(EmployeeCard, {\n                  filteredEmp: fetchDevelopers(project.teamMembers)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 50,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(Projects, \"dl0A3+3O6uUYxH+xaa/x8WShgTs=\");\n_c = Projects;\nexport default Projects;\nvar _c;\n$RefreshReg$(_c, \"Projects\");","map":{"version":3,"names":["React","useState","Grid","Item","Label","SideBar","EmployeeModal","projectData","empData","EmployeeCard","jsxDEV","_jsxDEV","Projects","_s","open","setOpen","selectedEmp","setSelectedEmp","clickedProjectId","setClickedProjectId","fetchDevelopers","teamMembers","arr","employees","filter","emp","includes","empID","console","log","clickHandler","toggleDevelopers","projectId","children","style","width","Column","fileName","_jsxFileName","lineNumber","columnNumber","padding","Group","divided","map","project","index","Image","size","src","Content","Header","title","Meta","projectTeam","Description","description","Extra","techStack","onClick","filteredEmp","_c","$RefreshReg$"],"sources":["/home/amphioffice-17/Nishanthan/Amphisoft/hr-portal/src/pages/Projects/Projects.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Grid, Item, Label } from 'semantic-ui-react';\nimport SideBar from '../../components/SideBar/SideBar';\nimport EmployeeModal from '../../components/EmployeeModal/EmployeeModal';\nimport projectData from '../../assets/data/projectDetails.json';\nimport empData from '../../assets/data/employeesData.json';\nimport EmployeeCard from '../../components/EmployeeCard/EmployeeCard';\n\nconst Projects = () => {\n  const [open, setOpen] = useState(false);\n  const [selectedEmp, setSelectedEmp] = useState(null);\n  const [clickedProjectId, setClickedProjectId] = useState(null);\n\n  const fetchDevelopers = (teamMembers) => {\n    const arr = empData.employees.filter((emp) => teamMembers.includes(emp.empID));\n    console.log(\"arr:\", arr);\n    return arr;\n  };\n\n  const clickHandler = (emp) => {\n    setOpen(!open);\n    setSelectedEmp(emp);\n  };\n\n  const toggleDevelopers = (projectId) => {\n    setClickedProjectId(projectId === clickedProjectId ? null : projectId);\n  };\n\n  return (\n    <div>\n      <Grid style={{ width: \"100vw\" }}>\n        <Grid.Column style={{ width: \"12%\" }}>\n          <SideBar />\n        </Grid.Column>\n        <Grid.Column style={{ width: \"88%\", padding: \"20px\" }}>\n          <Item.Group divided>\n            {projectData.map((project, index) => (\n              <Item key={index}>\n                <Item.Image size='small' src={project.src} />\n                <Item.Content style={{ padding: \"20px\" }}>\n                  <Item.Header>{project.title}</Item.Header>\n                  <Item.Meta>{project.projectTeam}</Item.Meta>\n                  <Item.Description>{project.description}</Item.Description>\n                  <Item.Extra>\n                    {project.techStack}\n                    <span onClick={() => toggleDevelopers(project.projectId)}>\n                      See Developers\n                    </span>\n                    {clickedProjectId === project.projectId && (\n                      <EmployeeCard filteredEmp={fetchDevelopers(project.teamMembers)} />\n                    )}\n                  </Item.Extra>\n                </Item.Content>\n              </Item>\n            ))}\n          </Item.Group>\n        </Grid.Column>\n      </Grid>\n    </div>\n  );\n};\n\nexport default Projects;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,IAAI,EAAEC,IAAI,EAAEC,KAAK,QAAQ,mBAAmB;AACrD,OAAOC,OAAO,MAAM,kCAAkC;AACtD,OAAOC,aAAa,MAAM,8CAA8C;AACxE,OAAOC,WAAW,MAAM,uCAAuC;AAC/D,OAAOC,OAAO,MAAM,sCAAsC;AAC1D,OAAOC,YAAY,MAAM,4CAA4C;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtE,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EACvC,MAAM,CAACe,WAAW,EAAEC,cAAc,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACiB,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;EAE9D,MAAMmB,eAAe,GAAIC,WAAW,IAAK;IACvC,MAAMC,GAAG,GAAGd,OAAO,CAACe,SAAS,CAACC,MAAM,CAAEC,GAAG,IAAKJ,WAAW,CAACK,QAAQ,CAACD,GAAG,CAACE,KAAK,CAAC,CAAC;IAC9EC,OAAO,CAACC,GAAG,CAAC,MAAM,EAAEP,GAAG,CAAC;IACxB,OAAOA,GAAG;EACZ,CAAC;EAED,MAAMQ,YAAY,GAAIL,GAAG,IAAK;IAC5BV,OAAO,CAAC,CAACD,IAAI,CAAC;IACdG,cAAc,CAACQ,GAAG,CAAC;EACrB,CAAC;EAED,MAAMM,gBAAgB,GAAIC,SAAS,IAAK;IACtCb,mBAAmB,CAACa,SAAS,KAAKd,gBAAgB,GAAG,IAAI,GAAGc,SAAS,CAAC;EACxE,CAAC;EAED,oBACErB,OAAA;IAAAsB,QAAA,eACEtB,OAAA,CAACT,IAAI;MAACgC,KAAK,EAAE;QAAEC,KAAK,EAAE;MAAQ,CAAE;MAAAF,QAAA,gBAC9BtB,OAAA,CAACT,IAAI,CAACkC,MAAM;QAACF,KAAK,EAAE;UAAEC,KAAK,EAAE;QAAM,CAAE;QAAAF,QAAA,eACnCtB,OAAA,CAACN,OAAO;UAAAgC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC,eACd7B,OAAA,CAACT,IAAI,CAACkC,MAAM;QAACF,KAAK,EAAE;UAAEC,KAAK,EAAE,KAAK;UAAEM,OAAO,EAAE;QAAO,CAAE;QAAAR,QAAA,eACpDtB,OAAA,CAACR,IAAI,CAACuC,KAAK;UAACC,OAAO;UAAAV,QAAA,EAChB1B,WAAW,CAACqC,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,kBAC9BnC,OAAA,CAACR,IAAI;YAAA8B,QAAA,gBACHtB,OAAA,CAACR,IAAI,CAAC4C,KAAK;cAACC,IAAI,EAAC,OAAO;cAACC,GAAG,EAAEJ,OAAO,CAACI;YAAI;cAAAZ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,eAC7C7B,OAAA,CAACR,IAAI,CAAC+C,OAAO;cAAChB,KAAK,EAAE;gBAAEO,OAAO,EAAE;cAAO,CAAE;cAAAR,QAAA,gBACvCtB,OAAA,CAACR,IAAI,CAACgD,MAAM;gBAAAlB,QAAA,EAAEY,OAAO,CAACO;cAAK;gBAAAf,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAc,CAAC,eAC1C7B,OAAA,CAACR,IAAI,CAACkD,IAAI;gBAAApB,QAAA,EAAEY,OAAO,CAACS;cAAW;gBAAAjB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAY,CAAC,eAC5C7B,OAAA,CAACR,IAAI,CAACoD,WAAW;gBAAAtB,QAAA,EAAEY,OAAO,CAACW;cAAW;gBAAAnB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAmB,CAAC,eAC1D7B,OAAA,CAACR,IAAI,CAACsD,KAAK;gBAAAxB,QAAA,GACRY,OAAO,CAACa,SAAS,eAClB/C,OAAA;kBAAMgD,OAAO,EAAEA,CAAA,KAAM5B,gBAAgB,CAACc,OAAO,CAACb,SAAS,CAAE;kBAAAC,QAAA,EAAC;gBAE1D;kBAAAI,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC,EACNtB,gBAAgB,KAAK2B,OAAO,CAACb,SAAS,iBACrCrB,OAAA,CAACF,YAAY;kBAACmD,WAAW,EAAExC,eAAe,CAACyB,OAAO,CAACxB,WAAW;gBAAE;kBAAAgB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE,CACnE;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACS,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACD,CAAC;UAAA,GAfNM,KAAK;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAgBV,CACP;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAAC3B,EAAA,CApDID,QAAQ;AAAAiD,EAAA,GAARjD,QAAQ;AAsDd,eAAeA,QAAQ;AAAC,IAAAiD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}