{"ast":null,"code":"var _jsxFileName = \"/home/amphioffice-17/Nishanthan/Amphisoft/hr-portal/src/pages/Dashboard/Dashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport \"./dashboard.css\";\nimport empData from \"../../assets/data/employeesData.json\";\nimport { Button, Card, Header, Icon, Image, Modal, Segment } from 'semantic-ui-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [open, setOpen] = useState(false);\n  const [selectedEmp, setSelectedEmp] = useState(open || \"\");\n  const clickHandler = emp => {\n    setOpen(!open);\n    // if (selectedEmp) {\n    //   setSelectedEmp(null);\n    // } else {\n    setSelectedEmp(emp);\n    // }\n  };\n  console.log(\"open:\", open);\n  console.log(\"selectedEmp:\", selectedEmp);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar\",\n      children: /*#__PURE__*/_jsxDEV(Icon, {\n        name: \"building\",\n        size: \"big\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main\",\n      children: [empData.employees.map((emp, index) => /*#__PURE__*/_jsxDEV(Card, {\n        className: \"card\",\n        onClick: () => {\n          clickHandler(emp);\n        },\n        children: [/*#__PURE__*/_jsxDEV(Image, {\n          src: require(\"../../assets/images/profile-icon.jpg\"),\n          ui: false,\n          style: {\n            width: \"100px\",\n            height: \"100px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Card.Content, {\n          className: \"card-content\",\n          children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n            children: emp.fullName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Card.Meta, {\n            children: [\"Joined in \", emp.doj]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Card.Description, {\n            children: emp.role\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(Modal, {\n        open: open,\n        children: [/*#__PURE__*/_jsxDEV(Modal.Content, {\n          image: true,\n          children: [/*#__PURE__*/_jsxDEV(Image, {\n            size: \"medium\",\n            src: require(\"../../assets/images/profile-icon.jpg\"),\n            wrapped: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Modal.Description, {\n            children: [/*#__PURE__*/_jsxDEV(Header, {\n              children: selectedEmp.fullName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 15\n            }, this), Object.entries(selectedEmp).map((data, value) => data[0] !== \"fullName\" && data[0] !== \"password\" && /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: [data[0], \" : \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 23\n              }, this), data[1]]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Actions, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            primary: true,\n            onClick: () => setOpen(false),\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"aL0q6ItwnclP/bzk7SQ992JBP8M=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","empData","Button","Card","Header","Icon","Image","Modal","Segment","jsxDEV","_jsxDEV","Dashboard","_s","open","setOpen","selectedEmp","setSelectedEmp","clickHandler","emp","console","log","className","children","name","size","fileName","_jsxFileName","lineNumber","columnNumber","employees","map","index","onClick","src","require","ui","style","width","height","Content","fullName","Meta","doj","Description","role","image","wrapped","Object","entries","data","value","Actions","primary","_c","$RefreshReg$"],"sources":["/home/amphioffice-17/Nishanthan/Amphisoft/hr-portal/src/pages/Dashboard/Dashboard.jsx"],"sourcesContent":["import React, { useState } from 'react'\nimport \"./dashboard.css\"\nimport empData from \"../../assets/data/employeesData.json\"\nimport { Button, Card, Header, Icon, Image, Modal, Segment } from 'semantic-ui-react'\n\nconst Dashboard = () => {\n  const [open, setOpen] = useState(false);\n  const [selectedEmp, setSelectedEmp] = useState(open || \"\");\n\n  const clickHandler = (emp) => {\n    setOpen(!open);\n    // if (selectedEmp) {\n    //   setSelectedEmp(null);\n    // } else {\n    setSelectedEmp(emp);\n    // }\n\n  }\n  console.log(\"open:\", open)\n  console.log(\"selectedEmp:\", selectedEmp);\n\n  return (\n    <div className='dashboard-container'>\n      <div className='sidebar'>\n        <Icon name={\"building\"} size='big'></Icon>\n      </div>\n      <div className='main'>\n        { empData.employees.map((emp, index) => (\n          <Card key={ index } className='card' onClick={ () => { clickHandler(emp) } } >\n            <Image src={ require(\"../../assets/images/profile-icon.jpg\") } ui={ false } style={ { width: \"100px\", height: \"100px\" } } />\n            <Card.Content className='card-content'>\n              <Card.Header>{ emp.fullName }</Card.Header>\n              <Card.Meta>Joined in { emp.doj }</Card.Meta>\n              <Card.Description>{ emp.role }</Card.Description>\n            </Card.Content>\n          </Card>\n        )) }\n        <Modal open={ open }>\n          <Modal.Content image>\n            <Image size='medium' src={ require(\"../../assets/images/profile-icon.jpg\") } wrapped />\n            <Modal.Description>\n              <Header>{ selectedEmp.fullName }</Header>\n              { Object.entries(selectedEmp).map((data, value) => (\n                (data[0] !== \"fullName\" && data[0] !== \"password\" && (\n                  <p ><span>{ data[0] } : </span>{ data[1] }</p>\n                ))\n              )) }\n            </Modal.Description>\n          </Modal.Content>\n          <Modal.Actions>\n            <Button primary onClick={ () => setOpen(false) }>\n              Close\n            </Button>\n          </Modal.Actions>\n        </Modal>\n      </div>\n    </div>\n  )\n}\n\nexport default Dashboard"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}